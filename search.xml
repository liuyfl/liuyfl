<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[webpack入门教程]]></title>
      <url>https://liuyfl.github.io/2017/01/22/webpack-tutorial/</url>
      <content type="html"><![CDATA[<p>webpack入门安装使用介绍<br><a id="more"></a><br>webpack是一款模块加载打包工具，可以对各个模块（js,css及图片等）进行加载，预处理，打包。<br>本文环境:win7  </p>
<p></p><h2>1、环境准备</h2>webpack是基于node.js编写，所以请确保已安装Node.js及NPM。<br>查看是否安装node.js和npm: <code>node -v/npm -v</code><br><img src="webpack-1.png" alt=""><p></p>
<p></p><h2>2、安装</h2>webpack安装命令:<code>npm install -g webpack</code>,-g表示进行全局安装,安装完成后可以通过<code>webpack -h</code>查看是否安装成功<p></p>
<p></p><h2>3、创建项目</h2>进入要创建项目的目录下，执行<code>npm init</code>按照提示填写信息，也可以不填一路回车到最后<br>安装webpack依赖(如果上面已经安装过了则可以忽略)<code>npm install webpack –save</code>、<code>npm install webpack –save-dev</code><br>–save把依赖包添加到package.json中的dependencies下，是发布后还需要依赖的模块<br>–save-dev把依赖包添加到package.json中的devDependencies下，是开发时用到的模块  <p></p>
<p></p><h3>3.1 在项目根目录下创建index.html和entry.js文件</h3>index.html文件内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">  &lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;Document&lt;/title&gt;</div><div class="line">  &lt;/head&gt;</div><div class="line">  &lt;body&gt;</div><div class="line">    &lt;script src=&quot;bundle.js&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>entry.js文件内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.write(&apos;这是我的webpack内容&apos;);</div></pre></td></tr></table></figure>文件创建完成后，执行<code>webpack ./entry.js bundle.js</code>就可以打包啦<br>打包后在浏览器中打开index.html就可以看到页面啦-文字(这是我的webpack内容)。  <p></p>
<p></p><h3>3.2 css文件加载</h3>在webpack中要加载css样式文件，需要先安装css文件的加载器css-loader和style-loader<br><code>npm install css-loader style-loader</code><br>安装完成后在根目录添加一个style.css文件，文件内容为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">  background:#d58ce2;</div><div class="line">  color:white;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p>
<p>然后，修改entry.js文件，添加<code>require(“!style!css!./style.css”);</code>来引入css文件，执行<code>webpack ./entry.js bundle.js</code>后重新刷新页面就可以看到样式效果了<br>另外，也可以直接添加<code>require(“./style.css”)</code>，这种添加方式新增一个webpack.config.js文件,文件内容包括如下部分:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">module.exports=&#123;</div><div class="line">    entry:&quot;./entry.js&quot;,  //定义入口文件，如果有多个入口，则使用数组方式</div><div class="line">    output:&#123;  //配置打包结果</div><div class="line">        path:__dirname,  //输出文件夹</div><div class="line">        filename:&quot;./bundle.js&quot;,  //打包结果文件名称</div><div class="line">    &#125;,</div><div class="line">    module:&#123;  //模块加载相关定义</div><div class="line">        loaders: [  //通过正则表达式匹配不同文件，定义不同的加载器</div><div class="line">            &#123;test:/\.css$/,loader:&quot;style!css&quot;&#125;,</div><div class="line">            &#123;test:/\.(png|jpg)$/,loader:&quot;url-loader&quot;&#125;</div><div class="line">        ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>其他详细参数可以参照<a href="http://webpack.github.io/docs/" target="_blank">webpack 1.x</a>、<a href="https://webpack.js.org/configuration/" target="_blank">webpack 2.x</a><br>添加了webpack.config.js后，只要执行<code>webpack</code>就可以了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[日语中星期和数数表示方法]]></title>
      <url>https://liuyfl.github.io/2017/01/18/japan-language-1/</url>
      <content type="html"><![CDATA[<p>日语中星期和数数表示方法<br><a id="more"></a></p>
<p></p><h2>星期:</h2>星期一　月曜日　げつようび<br>星期二　火曜日　かようび<br>星期三　水曜日　すいようび<br>星期四　木曜日　もくようび<br>星期五　金曜日　きんようび<br>星期六　土曜日　どようび<br>星期日　日曜日　にちようび<p></p>
<p></p><h2>数数：</h2>一个　一つ　ひとつ<br>两个　二つ　ふたつ<br>三个　三つ　みっつ<br>四个　四つ　よっつ<br>五个　五つ　いつつ<br>六个　六つ　むっつ<br>七个　七つ　ななつ<br>八个　八つ　やっつ<br>九个　九つ　ここのつ<br>十个　十　とお  <p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建博客教程04]]></title>
      <url>https://liuyfl.github.io/2017/01/03/hexo-tutorial-4/</url>
      <content type="html"><![CDATA[<p>本篇主要介绍自定义主题-搜索、评论。<br><a id="more"></a><br>    </p><h2>6、搜索</h2>本文是使用本地搜索<br>        首先要先生成索引数据，然后在_config.yml中配置<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//生成索引数据</div><div class="line">npm install hexo-generator-search --save</div><div class="line">//_config.yml</div><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div></pre></td></tr></table></figure>在页面添加搜索按钮及搜索结果页面<br>        添加搜索函数及搜索按钮触发事件，搜索函数来源于<a href="http://hahack.com/codes/local-search-engine-for-hexo/" target="_blank" rel="external">HaHack</a><br>    <h2>7、评论</h2>评论用的比较多的是<a href="https://disqus.com/" target="_blank" rel="external">disqus</a>和<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a>,不过disqus需要翻墙才能使用<br>        <h3>多说评论</h3>注册多说账号，创建站点，填写信息<br>        多说域名即为shortname,<br>        创建完成后在页面添加多说代码<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 多说评论框 start --&gt;</div><div class="line">&lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= key %&gt;&quot; data-title=&quot;&lt;%= title %&gt;&quot; data-url=&quot;&lt;%= url %&gt;&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;!-- 多说评论框 end --&gt;</div><div class="line">&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">var duoshuoQuery = &#123;short_name:&quot;shortname&quot;&#125;;</div><div class="line">	(function() &#123;</div><div class="line">		var ds = document.createElement(&apos;script&apos;);</div><div class="line">		ds.type = &apos;text/javascript&apos;;ds.async = true;</div><div class="line">		ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;;</div><div class="line">		ds.charset = &apos;UTF-8&apos;;</div><div class="line">		(document.getElementsByTagName(&apos;head&apos;)[0] </div><div class="line">		 || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);</div><div class="line">	&#125;)();</div><div class="line">	&lt;/script&gt;</div><div class="line">&lt;!-- 多说公共JS代码 end --&gt;</div></pre></td></tr></table></figure>如果不想设置多说评论的开关，可以忽略一下内容<br>        在_config.yml中设置多说开关,在评论位置添加开关判断<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//_config.yml</div><div class="line">duoshuo:</div><div class="line">  on: true</div><div class="line">  domain: #shortname</div><div class="line">//评论判断</div><div class="line">&lt;% if(theme.duoshuo.on) &#123; %&gt;</div><div class="line">	显示多说评论</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure><br>        <h3>disqus评论</h3>注册disqus账号，点击GET STARTED-&gt;I want to install Disqus on my site<br>        创建一个新的站点，这里的Website Name就是shortname,创建后无法修改，创建完成后添加disqus代码<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;script&gt;</div><div class="line">/**</div><div class="line">*  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.</div><div class="line">*  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/</div><div class="line">/*</div><div class="line">var disqus_config = function () &#123;</div><div class="line">this.page.url = PAGE_URL;  // Replace PAGE_URL with your page&apos;s canonical URL variable</div><div class="line">this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page&apos;s unique identifier variable</div><div class="line">&#125;;</div><div class="line">*/</div><div class="line">(function() &#123; // DON&apos;T EDIT BELOW THIS LINE</div><div class="line">var d = document, s = d.createElement(&apos;script&apos;);</div><div class="line">s.src = &apos;//shortname.disqus.com/embed.js&apos;;</div><div class="line">s.setAttribute(&apos;data-timestamp&apos;, +new Date());</div><div class="line">(d.head || d.body).appendChild(s);</div><div class="line">&#125;)();</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</div><div class="line">&lt;script id=&quot;dsq-count-scr&quot; src=&quot;//shortname.disqus.com/count.js&quot; async&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>如果不想设置disqus评论的开关，可以忽略一下内容<br>        在_config.yml中设置disqus开关,在评论位置添加开关判断<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//_config.yml</div><div class="line">disqus:</div><div class="line">  on: true</div><div class="line">  shortname: shortname</div><div class="line">//评论判断</div><div class="line">&lt;% if(theme.disqus.on) &#123; %&gt;</div><div class="line">	显示disqus评论</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure><p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建博客教程03]]></title>
      <url>https://liuyfl.github.io/2016/12/29/hexo-tutorial-3/</url>
      <content type="html"><![CDATA[<p>本篇主要介绍自定义主题-文章显示页面、归档页面、标签页面。<br><a id="more"></a><br>    </p><h2>3、post页面</h2>创建<code>/layout/post.ejs</code>文件<br>        文章显示页面内容可以自己定义，具体变量可以参照<a href="https://hexo.io/zh-cn/docs/variables.html#页面变量" target="_blank" rel="external">页面变量</a><br>        <code>page.more</code>是显示除了摘要外的其他内容，<code>page.content</code>是显示所有内容，<code>page.excerpt</code>是显示摘要<br>        <strong style="color:red">注意：标签页面实际上也是post页面，所以如果有标签页面存在，如果标签页面和其他页面样式显示有区别，则需要在post中区分出正常的post页面和标签页面</strong><br>        区分是否标签页面<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;% if(page.path === &apos;tags/index.html&apos;)&#123; %&gt;</div><div class="line">……</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure><h2>4、归档页面</h2>创建<code>/layout/archive.ejs</code>文件<br>        归档可以根据年份或者月份归档都可以<br>        本文是根据年份划分，年份中又划分了月份<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;% var last_y; %&gt;</div><div class="line">&lt;% var last_m; %&gt;</div><div class="line">&lt;% page.posts.each(function(post,i)&#123; %&gt;</div><div class="line">	&lt;% var year = post.date.year(); %&gt;</div><div class="line">	&lt;% var month = post.date.month(); %&gt;</div><div class="line">	&lt;% if (last_y!=year)&#123; %&gt;新的一年</div><div class="line">		&lt;% if(last_m != month)&#123; %&gt;新的月份</div><div class="line">		……</div><div class="line">		&lt;% &#125; %&gt;</div><div class="line">	&lt;% &#125; else &#123; %&gt;</div><div class="line">		&lt;% if(last_m != month)&#123; %&gt;</div><div class="line">		……</div><div class="line">		&lt;% &#125; %&gt;</div><div class="line">	&lt;% &#125; %&gt;</div><div class="line">	&lt;!-- archive show content --&gt;</div><div class="line">&lt;% &#125;) %&gt;</div></pre></td></tr></table></figure><h2>5、标签页面</h2>在实现标签页面的时候遇到个问题，我的所有文章都已经加上tags标记，但是访问标签页面的时候还是显示“<strong style="color:red"> Cannot GET /tags/</strong>”,当时一直搞不明白这是为什么<br>        后面去看了文档，后来发现还需要执行一个操作－<span style="color:red">新建一个命名为tags的页面</span><br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page &apos;tags&apos;</div></pre></td></tr></table></figure>此时就可以访问标签页面了，不过这时候会发现标签页面只有个标题，其他什么内容都没有……<br>        还记得上面post页面中是否标签页面的判断吗？在判断是标签页面的情况下，加载tags内容<br>        标签内容可以通过<a href="https://hexo.io/zh-cn/docs/helpers.html#tagcloud" target="_blank" rel="external">tagcloud</a>来控制标签显示样式<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;%- tagcloud(&#123;</div><div class="line">	min_font: 16, </div><div class="line">      	max_font: 50,</div><div class="line">	amount: 9999,</div><div class="line">	color: true,</div><div class="line">	start_color: &apos;gray&apos;,</div><div class="line">	end_color: &apos;#383131&apos;</div><div class="line">&#125;) %&gt;</div></pre></td></tr></table></figure><br>    到此，博客的基本页面都已经实现啦<p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建博客教程02]]></title>
      <url>https://liuyfl.github.io/2016/12/27/hexo-tutorial-2/</url>
      <content type="html"><![CDATA[<p>hexo主题有很多，但是换了一个个主题并没有让自己完全满意，所以打算自己实现一个主题。本篇主要介绍自定义主题准备和首页实现。<br><a id="more"></a><br>    </p><h2>1、创建主题文件夹</h2>在themes下面创建一个与landscape同级的文件夹,文件夹名称可以随意(例如：mytheme)<br>        在mytheme文件夹下创建<code>layout</code>和<code>source</code>文件夹，<code>_config.yml</code>文件<br>        因为主题是基于bootstrap，所以把bootstrap的源文件拷贝到mytheme-&gt;source下面，另外在该目录下创建<code>css</code>,<code>js</code>,<code>images</code>文件夹<br>    <h2>2、主题首页</h2>创建<code>/layout/layout.ejs</code>文件<br>        编辑layout.ejs<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">	&lt;!-- Head tag --&gt;</div><div class="line">	&lt;%- partial(&apos;_partial/head&apos;) %&gt;</div><div class="line">	&lt;body&gt;</div><div class="line">		&lt;!-- Menu --&gt;</div><div class="line">		&lt;%- partial(&apos;_partial/menu&apos;) %&gt;</div><div class="line">		&lt;%- body %&gt;</div><div class="line">		&lt;!-- Footer --&gt;</div><div class="line">		&lt;%- partial(&apos;_partial/footer&apos;) %&gt;</div><div class="line">		&lt;!-- After footer scripts --&gt;</div><div class="line">		&lt;%- partial(&apos;_partial/after-footer&apos;) %&gt;</div><div class="line">	&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>创建<code>/layout/index.ejs</code>文件<br>        编辑index.ejs<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;!-- Main Content --&gt;</div><div class="line">&lt;div class=&quot;blog-mainindex&quot;&gt;</div><div class="line">	&lt;% page.posts.each(function(item)&#123; %&gt;</div><div class="line">		&lt;%- partial(&apos;_partial/article-index&apos;,&#123;item: item&#125;)%&gt;</div><div class="line">	&lt;% &#125;); %&gt;</div><div class="line">	&lt;%- partial(&apos;_partial/pagination&apos;) %&gt;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>在index.ejs和layout.ejs中引入的<code>head</code>,<code>menu</code>,<code>footer</code>,<code>after-footer</code>,<code>article-index</code>,<code>pagination</code>是位于<code>/layout/partial/</code>下文件<br>        因为实现的主题的样式文件，头部和底部是固定的，每个页面都需要加载同样内容，所以采用这种形式实现。<br>        如果你的主题不是这种形式的，可以按照自己的方式呈现。<br>        <h3>head文件</h3>head是页面的head部分，加载一些样式文件<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">	&lt;meta chartset=&quot;utf-8&quot;&gt;</div><div class="line">	&lt;meta http=equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</div><div class="line">	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt;</div><div class="line">	&lt;title&gt;&lt;% if ( page.title )&#123; %&gt;&lt;%= page.title %&gt; | &lt;% &#125; %&gt; &lt;%= config.title %&gt;&lt;/title&gt;</div><div class="line">	&lt;!-- Bootstrap core css --&gt;</div><div class="line">	&lt;link rel=&quot;stylesheet&quot; href=&quot;/bootstrap/css/bootstrap.min.css&quot; type=&quot;text/css&quot; async&gt;</div><div class="line">	&lt;!-- Blog css --&gt;</div><div class="line">	&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/blog.css&quot; type=&quot;text/css&quot; async&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure><h3>menu文件</h3>menu是页面的菜单栏部分，在mytheme-&gt;_config.yml中定义菜单栏选项,menu.ejs中显示自定义的菜单栏内容<br>        <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">_config.yml</div><div class="line">menu:</div><div class="line">  首页: /</div><div class="line">  归档: /archives</div><div class="line">  标签: /tags</div><div class="line">menu.ejs</div><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span>(<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.menu</span>)&#123; %&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(theme.menu[i]) %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">i</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure><p></p>
<p></p><h3>article-index文件</h3>article-index是首页主要内容的显示部分，可以根据自己想要的样式去组合显示内容<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//文章标题</div><div class="line">item.title</div><div class="line">//文章作者</div><div class="line">item.author</div><div class="line">//文章时间</div><div class="line">item.date</div><div class="line">//文章摘要(&lt;!--more--&gt;以上内容即为摘要)</div><div class="line">item.excerpt</div></pre></td></tr></table></figure><h3>pagination文件</h3>pagination是分页显示部分，如果不分页可以忽略该部分<br>        <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;%- paginator(&#123;</div><div class="line">	prev_text: &apos;Prev&apos;,</div><div class="line">	next_text: &apos;Next&apos;,</div><div class="line">&#125;) %&gt;</div></pre></td></tr></table></figure>具体内容可以自己参考<a href="https://hexo.io/zh-cn/docs/helpers.html#paginator" target="_blank" rel="external">pagination</a>实现<br>        <h3>footer/after-footer文件</h3>footer是页面底部显示内容，after-footer是加载js文件<p></p>
<p>如此，首页就完成了……</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo搭建博客教程01]]></title>
      <url>https://liuyfl.github.io/2016/12/23/hexo-tutorial-1/</url>
      <content type="html"><![CDATA[<p>这几天用hexo搭建自己的博客，自己实现主题，其中碰到了一些问题，在此记录下来，以便查阅。<br><a id="more"></a><br>    </p><h2>环境准备</h2>本文环境:win7-64<br>    <a href="http://pan.baidu.com/s/1bpgjfnL" target="_blank" rel="external">git-2.7.2-64</a><br>    <a href="http://pan.baidu.com/s/1mhXJpyg" target="_blank" rel="external">nodejs-v6.9.2-x64</a><br>    1、安装git<br>    下载git安装，并确认已在环境变量中配置git路径<br>    <img src="hexo_tutorial_1.png" alt=""><br>    2、安装nodejs<br>    安装nodejs，一直选择next即可<br>    <img src="hexo_tutorial_2.png" alt=""><br>    <h2>hexo安装</h2>在命令行终端输入:npm install hexo-cli -g<br>    该命令执行时间会比较长，如果失败可以百度搜索<a href="https://npm.taobao.org/" target="_blank" rel="external">淘宝npm镜像</a>，换成cnpm install hexo-cli -g命令执行(以下npm命令都可以替换成cnpm)<br>    <h2>配置hexo</h2>选择博客根目录，cmd进入该目录下，执行:hexo init [目录名称] 例如:hexo init myhexoblog<br>    cd进入myhexoblog文件夹，执行:npm install<br>    目录下的_config.yml是博客的配置信息，可以在此配置一些参数信息<br>    启动服务<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure>启动后可以通过<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 访问<br>    生成静态文件<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure>hexo有不同的主题，可以修改主题样式<br>    下载主题(主题可在<a href="https://hexo.io/themes/" target="_blank" rel="external">hexo.io</a>上预览查找)<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone github上主题路径 themes/主题名称</div></pre></td></tr></table></figure><br>    下载完成后在_config.yml中修改theme: landscape为你的主题名称(注意:theme冒号后面有个空格)<br>    修改后清除缓存和静态文件<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo clean</div></pre></td></tr></table></figure>重新启动:hexo s即可看到你替换的新主题<br>    <h2>发布github</h2>hexo博客内容生成静态文件后可以发布到github上<br>    首先，注册一个<a href="https://github.com/" target="_blank" rel="external">github</a>账号(如果已有账号，请忽略)<br>    创建后登陆进去点击右上角的New Repository创新一个新的版本库<br>    在settings中修改版本库名称，建议修改成注册名称+github.io,其他的名称好像会失败<br>    <img src="hexo_tutorial_3.png" alt=""><br>    修改成功后在settings页面的GitHub Pages可以看到类似信息<br>    <img src="hexo_tutorial_4.png" alt=""><br>    上传博客文件到github上<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: 版本库对应的HTTPS链接</div><div class="line">  branch: master</div><div class="line">  message: update</div></pre></td></tr></table></figure>通过命令<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure>即可上传public下的那些静态文件至github上<br>    <strong style="color:red">注意:如果直接在cmd下执行hexo d会出现错误，发现无法提交，要选择用git bash来执行部署指令</strong><p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[日本語テスト]]></title>
      <url>https://liuyfl.github.io/2016/12/22/japan-language-test/</url>
      <content type="html"><![CDATA[<p>これは日本語入力テストです。<br><a id="more"></a><br>一日〔ついたち〕二日〔ふつか〕三日〔みっか〕四日〔よっか〕五日〔いつか〕<br>六日〔むいか〕七日〔なのか〕八日〔ようか〕九日〔ここのか〕十日〔とおか〕<br>十一日〔じゅういちにち〕十二日〔じゅうににち〕十三日〔じゅうさんにち〕十四日〔じゅうよっか〕十五日〔じゅうごにち〕<br>十六日〔じゅうろくにち〕十七日〔じゅうしちにち〕十八日〔じゅうはちにち〕十九日〔じゅうくにち〕二十日〔はつか〕<br>二十一日〔にじゅういちにち〕二十二日〔にじゅうににち〕二十三日〔にじゅうさんにち〕二十四日〔にじゅうよっか〕二十五日〔にじゅうごにち〕<br>二十六日〔にじゅうろくにち〕二十七日〔にじゅうしちにち〕二十八日〔にじゅうはちにち〕二十九日〔にじゅうくにち〕三十日〔さんじゅうにち〕</p>
<p>一月〔いちがつ〕二月〔にがつ〕三月〔さんがつ〕四月〔しがつ〕五月〔ごがつ〕六月〔ろくがつ〕<br>七月〔しちがつ〕八月〔はちがつ〕九月〔くがつ〕十月〔じゅうがつ〕十一月〔じゅういちがつ〕十二月〔じゅうにがつ〕</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[禁止chrome记住密码]]></title>
      <url>https://liuyfl.github.io/2016/06/21/disabled-remember-password/</url>
      <content type="html"><![CDATA[<p>谷歌浏览器保存密码后输入框背景色变成黄色，会影响原来的输入框样式，css样式input:-webkit-autofill可以改变输入框样式，background-color,background-image,color这三个属性无法通过!important覆盖原来样式<br><a id="more"></a><br>谷歌浏览器保存密码后输入框背景色变成黄色，会影响原来的输入框样式css样式input:-webkit-autofill可以改变输入框样式，background-color,background-image,color这三个属性无法通过!important覆盖原来样式;<br>设置优先级，只能通过其他的样式（例如，box-shadow来覆盖黄色背景），但是如果原来的输入框背景是透明的或者是图片之类的，就没办法用这样的方式去修改，所以我采取禁用保存密码功能。<br>比较简单就可以实现禁用功能的方法是，将表单的type=’password’设置成text,添加focus事件改变type属性onfocus=”this.type=’password’” 再加上autocomplete=’off’就可以达到禁止保存密码功能了。当然，通过js代码也是可以实现这个功能的，但是我觉得这样子比较简单方便。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[css实现页面元素居中]]></title>
      <url>https://liuyfl.github.io/2015/11/18/center-of-elements-about-css/</url>
      <content type="html"><![CDATA[<p>利用css属性实现元素的水平居中和垂直居中<br><a id="more"></a></p>
<p></p><h2>水平居中</h2><br>对于已知宽度的块级元素实现水平居中只需要设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">margin-left:auto;</div><div class="line">margin-right:auto;</div></pre></td></tr></table></figure>对于多个块级元素实现水平居中只需要设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//1</div><div class="line">父类&#123;</div><div class="line">	text-align:center;</div><div class="line">&#125;</div><div class="line">块级元素&#123;</div><div class="line">	display:inline-block;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//2</div><div class="line">父类&#123;</div><div class="line">	display:flex;(flex布局兼容性问题)</div><div class="line">	justify-content:center;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>对于未知宽度的块级元素实现水平居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">position:absolute;</div><div class="line">left:50%;</div><div class="line">transform:translateX(-50%);//若宽度w已知,可采用margin-left:-w/2px方式，两者实现结果一样</div></pre></td></tr></table></figure><p></p>
<p></p><h2>垂直居中</h2><br>多行的行内元素垂直居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">display:table-cell;</div><div class="line">vertical-align:middle;</div></pre></td></tr></table></figure>已知高度的块级元素垂直居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">position:absolute;</div><div class="line">top:50%;</div><div class="line">margin-top:-h/2px;(已知高度一半)</div></pre></td></tr></table></figure>未知高度的块级元素垂直居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//1</div><div class="line">position:absolute;</div><div class="line">top:50%;</div><div class="line">transform:translateY(-50%);</div><div class="line">//2</div><div class="line">display:flex;</div><div class="line">justify-content:center;</div><div class="line">align-items:center;</div></pre></td></tr></table></figure>网上看到相关的教程，自己整合记录下来，方便自己后面查看<p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[django一些相关问题]]></title>
      <url>https://liuyfl.github.io/2015/10/30/issue-about-django/</url>
      <content type="html"><![CDATA[<p>这两天在处理django项目时碰到一些问题，在此记录下来，以便日后查看<br><a id="more"></a><br>1、ur路径设置要忽略大小写，查找了很多资料，都没有发现相关的介绍，最后在谷歌上找到一个解决方案，<a href="https://groups.google.com/forum/#!topic/python-cn/DzYrR-d1usI" target="_blank" rel="external">https://groups.google.com/forum/#!topic/python-cn/DzYrR-d1usI</a>，通过(?i)可以很容易的解决django的url大小写问题<br>2、从数据库取出来的内容中含有html标签，django模板会自动转义，导致内容输出格式错误，后来发现django模板中有一个可以关闭自动转义的属性，<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">autoescape</span></span> off %&#125;</span><span class="xml">……</span><span class="template-tag">&#123;% <span class="name"><span class="name">endautoescape</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure></p>
<p>另外，autoescape需要注意的一点是该属性会被继承，父模板如果设置了autoescape ，则子模板也会继承该属性</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php下设置cookie问题]]></title>
      <url>https://liuyfl.github.io/2015/10/22/php-set-cookie/</url>
      <content type="html"><![CDATA[<p>在php下设置了cookie，CI下使用set_cookie()方式，但是发现cookie不能马上生效，需要刷新后才能获取，后来在网上找到了一个解决办法，$_COOKIE[$var] = $value；多加一句就可以实现不刷新cookie生效<br><a id="more"></a><br>在php下设置了cookie，CI下使用set_cookie()方式，但是发现cookie不能马上生效，需要刷新后才能获取，后来在网上找到了一个解决办法，$_COOKIE[$var] = $value；多加一句就可以实现不刷新cookie生效<br>//PHP COOKIE设置函数立即生效，支持数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function cookie($var, $value = &apos;&apos;, $time = 0, $path = &apos;&apos;, $domain = &apos;&apos;, $s = false)</div><div class="line">&#123;</div><div class="line">    $_COOKIE[$var] = $value;</div><div class="line">    if (is_array($value)) &#123;</div><div class="line">        foreach ($value as $k =&gt; $v) &#123;</div><div class="line">            setcookie($var . &apos;[&apos; . $k . &apos;]&apos;, $v, $time, $path, $domain, $s);</div><div class="line">        &#125;</div><div class="line">    &#125; else &#123;</div><div class="line">        setcookie($var, $value, $time, $path, $domain, $s);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[js页面无滚动条添加滚轮事件]]></title>
      <url>https://liuyfl.github.io/2015/08/13/page-scroll-event/</url>
      <content type="html"><![CDATA[<p>当页面无滚动条时，滑动滚轮时window.onscroll事件不会相应，此时要触发滚动事件的话要根据滚轮滚动方向主动去添加滚轮事件<br><a id="more"></a><br>当页面无滚动条时，滑动滚轮时window.onscroll事件不会相应，此时要触发滚动事件的话要根据滚轮滚动方向主动去添加滚轮事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">var MouseWheelHandler=function(e)&#123;</div><div class="line">	e.preventDefault();</div><div class="line">	e=window.event||e;</div><div class="line">	var value;</div><div class="line">	if(e.wheelDelta)</div><div class="line">		value=e.wheelDelta;</div><div class="line">	else if(e.detail)</div><div class="line">		value=-e.detail;</div><div class="line">&#125;</div><div class="line">var addMouseWheelHandler=function()&#123;</div><div class="line">	if(document.attachEvent)</div><div class="line">		document.attachEvent(&apos;onmousewheel&apos;,MouseWheelHandler);</div><div class="line">	else if(document.addEventListener)</div><div class="line">		document.addEventListener(&apos;DOMMouseScroll&apos;,MouseWheelHandler,false);</div><div class="line">	else</div><div class="line">		document.addEventListener(&apos;mousewheel&apos;,MouseWheelHandler,false);</div><div class="line">&#125;</div><div class="line">addMouseWheelHandler();</div></pre></td></tr></table></figure>在IE、chrome、opera、safari、firefox中已测试chrome、ie、Firefox可用，<br>其中要注意的是，Firefox中是通过e.detail来判断滚轮方向，且e.detail=-3方向向上，e.detail=3方向向下<br>IE、chrome中通过e.wheelDelta判断滚轮方向，e.wheelDelta=120方向向上，e.wheelDelta=-120方向向下<br>但是，当页面有滚动条时要注意，原始的滚轮事件会失效</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python中关于字符串的问题]]></title>
      <url>https://liuyfl.github.io/2015/08/12/python-string-charset/</url>
      <content type="html"><![CDATA[<p>在Python里面，字符串相加经常会出现<span style="color:red">ascii’ codec can’t decode byte 0xe7 in position 0: ordinal not in range(128)</span>这样的错误,原因呢，是因为相加的字符串中一个是Unicode类型，另外一个是str类型，不同类型相加是会出现报错<br><a id="more"></a><br>在Python里面，字符串相加经常会出现<span style="color:red">ascii’ codec can’t decode byte 0xe7 in position 0: ordinal not in range(128)</span>这样的错误,原因呢，是因为相加的字符串中一个是Unicode类型，另外一个是str类型，不同类型相加是会出现报错，要注意的一点是，如果是在函数中定义的字符串肯定是str类型，如果是通过request或者数据库方式获取的字符串，Unicode类型，在对他们进行相加操作前要先进行类型转换，一般可以采用str(字符串)、字符串.encode(‘utf-8’)格式</p>
<p>但是在从数据库中获取的数据时有一个字段类型是不需要转化的，blob可以直接进行字符串操作</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python字符串相加问题]]></title>
      <url>https://liuyfl.github.io/2015/07/29/python-string-concat/</url>
      <content type="html"><![CDATA[<p>今天在用Python拼接字符串时碰到个问题，从数据库取出来的数据以及获取到的时间等数据拼成了一个字符串a，将字符串a与自定义的字符串b拼接时一直中断，无法继续执行<br><a id="more"></a><br>今天在用Python拼接字符串时碰到个问题，从数据库取出来的数据以及获取到的时间等数据拼成了一个字符串a，将字符串a与自定义的字符串b拼接时一直中断，无法继续执行，也没有报错，将数据库取出数据变成自定义放到另一个文件中尝试，结果发现没有问题，后来尝试打印每个字符串的类型，结果发现获取的时间戳类型是float，数据库取出数据类型是Unicode，而自定义的字符串类型是str，不同类型的数据不能直接拼接在一起，需要将其先转换为同一类型再进行拼接。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">t=time.time()</div><div class="line">h1=&apos;my test 1&apos;</div><div class="line">str1=h1+str(t)</div></pre></td></tr></table></figure>Python将其他类型转换为str只需要一个语句就能实现，str(需要转换的变量)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ajax同步和异步]]></title>
      <url>https://liuyfl.github.io/2015/07/27/ajax-async/</url>
      <content type="html"><![CDATA[<p>ajax请求中同步是要等待请求结果返回后才能继续执行，而异步请求则不需要等待返回结果，可以直接进行后面语句。<br><a id="more"></a><br>ajax请求中同步是要等待请求结果返回后才能继续执行，而异步请求则不需要等待返回结果，可以直接进行后面语句。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[重叠div鼠标经过事件]]></title>
      <url>https://liuyfl.github.io/2015/07/21/css-div-events/</url>
      <content type="html"><![CDATA[<p>两个div重叠了，但是下面的div有鼠标移入移出事件，发现当鼠标移入或者移出时事件会执行两次…<br><a id="more"></a><br>两个div重叠了，但是下面的div有鼠标移入移出事件，发现当鼠标移入或者移出时事件会执行两次，尝试了在上层div阻止事件，判断div所在位置……，后来发现只要一个css属性即可解决该问题，在上层div中设置pointer-events:none;阻止鼠标事件</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI连接多个数据库]]></title>
      <url>https://liuyfl.github.io/2015/06/24/ci-more-database/</url>
      <content type="html"><![CDATA[<p>使用CI框架，设置连接多个数据库<br><a id="more"></a><br>参考<a href="http://codeigniter.org.cn/user_guide/database/connecting.html" target="_blank" rel="external">http://codeigniter.org.cn/user_guide/database/connecting.html</a>手册<br>首先,在database.php中设置多个数据库的连接信息,这里命名为’test’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$db[&apos;test&apos;][&apos;hostname&apos;] = &quot;localhost&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;username&apos;] = &quot;root&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;password&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;database&apos;] = &quot;database_name&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;dbdriver&apos;] = &quot;mysql&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;dbprefix&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;pconnect&apos;] = TRUE;</div><div class="line">$db[&apos;test&apos;][&apos;db_debug&apos;] = FALSE;</div><div class="line">$db[&apos;test&apos;][&apos;cache_on&apos;] = FALSE;</div><div class="line">$db[&apos;test&apos;][&apos;cachedir&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;char_set&apos;] = &quot;utf8&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;dbcollat&apos;] = &quot;utf8_general_ci&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;swap_pre&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;autoinit&apos;] = TRUE;</div><div class="line">$db[&apos;test&apos;][&apos;stricton&apos;] = FALSE;</div></pre></td></tr></table></figure>记得把配置中的pconnect改为false,其他的不变<br>加载数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$this-&gt;db1=$this-&gt;load-&gt;database(&apos;default&apos;,TRUE);</div><div class="line">$this-&gt;db2=$this-&gt;load-&gt;database(&apos;test&apos;,TRUE);</div></pre></td></tr></table></figure>调用数据库函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$this-&gt;db1-&gt;get(&apos;news&apos;)-&gt;result-array();</div><div class="line">$this-&gt;db1-&gt;where(&apos;name&apos;,&apos;test&apos;);</div><div class="line">$this-&gt;db1-&gt;get(&apos;news&apos;)-&gt;result-array();</div></pre></td></tr></table></figure>这就可以实现连接多个数据库了</p>
]]></content>
    </entry>
    
  
  
</search>
