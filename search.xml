<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[禁止chrome记住密码]]></title>
      <url>http://yoursite.com/2016/06/21/disabled-remember-password/</url>
      <content type="html"><![CDATA[<p>谷歌浏览器保存密码后输入框背景色变成黄色，会影响原来的输入框样式，css样式input:-webkit-autofill可以改变输入框样式，background-color,background-image,color这三个属性无法通过!important覆盖原来样式<br><a id="more"></a><br>谷歌浏览器保存密码后输入框背景色变成黄色，会影响原来的输入框样式css样式input:-webkit-autofill可以改变输入框样式，background-color,background-image,color这三个属性无法通过!important覆盖原来样式;<br>设置优先级，只能通过其他的样式（例如，box-shadow来覆盖黄色背景），但是如果原来的输入框背景是透明的或者是图片之类的，就没办法用这样的方式去修改，所以我采取禁用保存密码功能。<br>比较简单就可以实现禁用功能的方法是，将表单的type=’password’设置成text,添加focus事件改变type属性onfocus=”this.type=’password’” 再加上autocomplete=’off’就可以达到禁止保存密码功能了。当然，通过js代码也是可以实现这个功能的，但是我觉得这样子比较简单方便。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[css实现页面元素居中]]></title>
      <url>http://yoursite.com/2015/11/18/center-of-elements-about-css/</url>
      <content type="html"><![CDATA[<p>利用css属性实现元素的水平居中和垂直居中<br><a id="more"></a></p>
<p></p><h2>水平居中</h2><br>对于已知宽度的块级元素实现水平居中只需要设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">margin-left:auto;</div><div class="line">margin-right:auto;</div></pre></td></tr></table></figure>对于多个块级元素实现水平居中只需要设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">//1</div><div class="line">父类&#123;</div><div class="line">	text-align:center;</div><div class="line">&#125;</div><div class="line">块级元素&#123;</div><div class="line">	display:inline-block;</div><div class="line">&#125;</div><div class="line"></div><div class="line">//2</div><div class="line">父类&#123;</div><div class="line">	display:flex;(flex布局兼容性问题)</div><div class="line">	justify-content:center;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>对于未知宽度的块级元素实现水平居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">position:absolute;</div><div class="line">left:50%;</div><div class="line">transform:translateX(-50%);//若宽度w已知,可采用margin-left:-w/2px方式，两者实现结果一样</div></pre></td></tr></table></figure><p></p>
<p></p><h2>垂直居中</h2><br>多行的行内元素垂直居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">display:table-cell;</div><div class="line">vertical-align:middle;</div></pre></td></tr></table></figure>已知高度的块级元素垂直居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">position:absolute;</div><div class="line">top:50%;</div><div class="line">margin-top:-h/2px;(已知高度一半)</div></pre></td></tr></table></figure>未知高度的块级元素垂直居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//1</div><div class="line">position:absolute;</div><div class="line">top:50%;</div><div class="line">transform:translateY(-50%);</div><div class="line">//2</div><div class="line">display:flex;</div><div class="line">justify-content:center;</div><div class="line">align-items:center;</div></pre></td></tr></table></figure>网上看到相关的教程，自己整合记录下来，方便自己后面查看<p></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[django一些相关问题]]></title>
      <url>http://yoursite.com/2015/10/30/issue-about-django/</url>
      <content type="html"><![CDATA[<p>这两天在处理django项目时碰到一些问题，在此记录下来，以便日后查看<br><a id="more"></a><br>1、ur路径设置要忽略大小写，查找了很多资料，都没有发现相关的介绍，最后在谷歌上找到一个解决方案，<a href="https://groups.google.com/forum/#!topic/python-cn/DzYrR-d1usI" target="_blank" rel="external">https://groups.google.com/forum/#!topic/python-cn/DzYrR-d1usI</a>，通过(?i)可以很容易的解决django的url大小写问题<br>2、从数据库取出来的内容中含有html标签，django模板会自动转义，导致内容输出格式错误，后来发现django模板中有一个可以关闭自动转义的属性，<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">autoescape</span></span> off %&#125;</span>……<span class="template-tag">&#123;% <span class="name"><span class="name">endautoescape</span></span> %&#125;</span></div></pre></td></tr></table></figure></p>
<p>另外，autoescape需要注意的一点是该属性会被继承，父模板如果设置了autoescape ，则子模板也会继承该属性</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php下设置cookie问题]]></title>
      <url>http://yoursite.com/2015/10/22/php-set-cookie/</url>
      <content type="html"><![CDATA[<p>在php下设置了cookie，CI下使用set_cookie()方式，但是发现cookie不能马上生效，需要刷新后才能获取，后来在网上找到了一个解决办法，$_COOKIE[$var] = $value；多加一句就可以实现不刷新cookie生效<br><a id="more"></a><br>在php下设置了cookie，CI下使用set_cookie()方式，但是发现cookie不能马上生效，需要刷新后才能获取，后来在网上找到了一个解决办法，$_COOKIE[$var] = $value；多加一句就可以实现不刷新cookie生效<br>//PHP COOKIE设置函数立即生效，支持数组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function cookie($var, $value = &apos;&apos;, $time = 0, $path = &apos;&apos;, $domain = &apos;&apos;, $s = false)</div><div class="line">&#123;</div><div class="line">    $_COOKIE[$var] = $value;</div><div class="line">    if (is_array($value)) &#123;</div><div class="line">        foreach ($value as $k =&gt; $v) &#123;</div><div class="line">            setcookie($var . &apos;[&apos; . $k . &apos;]&apos;, $v, $time, $path, $domain, $s);</div><div class="line">        &#125;</div><div class="line">    &#125; else &#123;</div><div class="line">        setcookie($var, $value, $time, $path, $domain, $s);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[js页面无滚动条添加滚轮事件]]></title>
      <url>http://yoursite.com/2015/08/13/page-scroll-event/</url>
      <content type="html"><![CDATA[<p>当页面无滚动条时，滑动滚轮时window.onscroll事件不会相应，此时要触发滚动事件的话要根据滚轮滚动方向主动去添加滚轮事件<br><a id="more"></a><br>当页面无滚动条时，滑动滚轮时window.onscroll事件不会相应，此时要触发滚动事件的话要根据滚轮滚动方向主动去添加滚轮事件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">var MouseWheelHandler=function(e)&#123;</div><div class="line">	e.preventDefault();</div><div class="line">	e=window.event||e;</div><div class="line">	var value;</div><div class="line">	if(e.wheelDelta)</div><div class="line">		value=e.wheelDelta;</div><div class="line">	else if(e.detail)</div><div class="line">		value=-e.detail;</div><div class="line">&#125;</div><div class="line">var addMouseWheelHandler=function()&#123;</div><div class="line">	if(document.attachEvent)</div><div class="line">		document.attachEvent(&apos;onmousewheel&apos;,MouseWheelHandler);</div><div class="line">	else if(document.addEventListener)</div><div class="line">		document.addEventListener(&apos;DOMMouseScroll&apos;,MouseWheelHandler,false);</div><div class="line">	else</div><div class="line">		document.addEventListener(&apos;mousewheel&apos;,MouseWheelHandler,false);</div><div class="line">&#125;</div><div class="line">addMouseWheelHandler();</div></pre></td></tr></table></figure>在IE、chrome、opera、safari、firefox中已测试chrome、ie、Firefox可用，<br>其中要注意的是，Firefox中是通过e.detail来判断滚轮方向，且e.detail=-3方向向上，e.detail=3方向向下<br>IE、chrome中通过e.wheelDelta判断滚轮方向，e.wheelDelta=120方向向上，e.wheelDelta=-120方向向下<br>但是，当页面有滚动条时要注意，原始的滚轮事件会失效</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python中关于字符串的问题]]></title>
      <url>http://yoursite.com/2015/08/12/python-string-charset/</url>
      <content type="html"><![CDATA[<p>在Python里面，字符串相加经常会出现<span style="color:red">ascii’ codec can’t decode byte 0xe7 in position 0: ordinal not in range(128)</span>这样的错误,原因呢，是因为相加的字符串中一个是Unicode类型，另外一个是str类型，不同类型相加是会出现报错<br><a id="more"></a><br>在Python里面，字符串相加经常会出现<span style="color:red">ascii’ codec can’t decode byte 0xe7 in position 0: ordinal not in range(128)</span>这样的错误,原因呢，是因为相加的字符串中一个是Unicode类型，另外一个是str类型，不同类型相加是会出现报错，要注意的一点是，如果是在函数中定义的字符串肯定是str类型，如果是通过request或者数据库方式获取的字符串，Unicode类型，在对他们进行相加操作前要先进行类型转换，一般可以采用str(字符串)、字符串.encode(‘utf-8’)格式</p>
<p>但是在从数据库中获取的数据时有一个字段类型是不需要转化的，blob可以直接进行字符串操作</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python字符串相加问题]]></title>
      <url>http://yoursite.com/2015/07/29/python-string-concat/</url>
      <content type="html"><![CDATA[<p>今天在用Python拼接字符串时碰到个问题，从数据库取出来的数据以及获取到的时间等数据拼成了一个字符串a，将字符串a与自定义的字符串b拼接时一直中断，无法继续执行<br><a id="more"></a><br>今天在用Python拼接字符串时碰到个问题，从数据库取出来的数据以及获取到的时间等数据拼成了一个字符串a，将字符串a与自定义的字符串b拼接时一直中断，无法继续执行，也没有报错，将数据库取出数据变成自定义放到另一个文件中尝试，结果发现没有问题，后来尝试打印每个字符串的类型，结果发现获取的时间戳类型是float，数据库取出数据类型是Unicode，而自定义的字符串类型是str，不同类型的数据不能直接拼接在一起，需要将其先转换为同一类型再进行拼接。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">t=time.time()</div><div class="line">h1=&apos;my test 1&apos;</div><div class="line">str1=h1+str(t)</div></pre></td></tr></table></figure>Python将其他类型转换为str只需要一个语句就能实现，str(需要转换的变量)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ajax同步和异步]]></title>
      <url>http://yoursite.com/2015/07/27/ajax-async/</url>
      <content type="html"><![CDATA[<p>ajax请求中同步是要等待请求结果返回后才能继续执行，而异步请求则不需要等待返回结果，可以直接进行后面语句。<br><a id="more"></a><br>ajax请求中同步是要等待请求结果返回后才能继续执行，而异步请求则不需要等待返回结果，可以直接进行后面语句。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[重叠div鼠标经过事件]]></title>
      <url>http://yoursite.com/2015/07/21/css-div-events/</url>
      <content type="html"><![CDATA[<p>两个div重叠了，但是下面的div有鼠标移入移出事件，发现当鼠标移入或者移出时事件会执行两次…<br><a id="more"></a><br>两个div重叠了，但是下面的div有鼠标移入移出事件，发现当鼠标移入或者移出时事件会执行两次，尝试了在上层div阻止事件，判断div所在位置……，后来发现只要一个css属性即可解决该问题，在上层div中设置pointer-events:none;阻止鼠标事件</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CI连接多个数据库]]></title>
      <url>http://yoursite.com/2015/06/24/ci-more-database/</url>
      <content type="html"><![CDATA[<p>使用CI框架，设置连接多个数据库<br><a id="more"></a><br>参考<a href="http://codeigniter.org.cn/user_guide/database/connecting.html" target="_blank" rel="external">http://codeigniter.org.cn/user_guide/database/connecting.html</a>手册<br>首先,在database.php中设置多个数据库的连接信息,这里命名为’test’<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$db[&apos;test&apos;][&apos;hostname&apos;] = &quot;localhost&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;username&apos;] = &quot;root&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;password&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;database&apos;] = &quot;database_name&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;dbdriver&apos;] = &quot;mysql&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;dbprefix&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;pconnect&apos;] = TRUE;</div><div class="line">$db[&apos;test&apos;][&apos;db_debug&apos;] = FALSE;</div><div class="line">$db[&apos;test&apos;][&apos;cache_on&apos;] = FALSE;</div><div class="line">$db[&apos;test&apos;][&apos;cachedir&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;char_set&apos;] = &quot;utf8&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;dbcollat&apos;] = &quot;utf8_general_ci&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;swap_pre&apos;] = &quot;&quot;;</div><div class="line">$db[&apos;test&apos;][&apos;autoinit&apos;] = TRUE;</div><div class="line">$db[&apos;test&apos;][&apos;stricton&apos;] = FALSE;</div></pre></td></tr></table></figure>记得把配置中的pconnect改为false,其他的不变<br>加载数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$this-&gt;db1=$this-&gt;load-&gt;database(&apos;default&apos;,TRUE);</div><div class="line">$this-&gt;db2=$this-&gt;load-&gt;database(&apos;test&apos;,TRUE);</div></pre></td></tr></table></figure>调用数据库函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$this-&gt;db1-&gt;get(&apos;news&apos;)-&gt;result-array();</div><div class="line">$this-&gt;db1-&gt;where(&apos;name&apos;,&apos;test&apos;);</div><div class="line">$this-&gt;db1-&gt;get(&apos;news&apos;)-&gt;result-array();</div></pre></td></tr></table></figure>这就可以实现连接多个数据库了</p>
]]></content>
    </entry>
    
  
  
</search>
